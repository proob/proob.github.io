{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/GridList/GridList.js","webpack:///./node_modules/@material-ui/core/esm/GridListTile/GridListTile.js","webpack:///./node_modules/@material-ui/core/esm/GridListTileBar/GridListTileBar.js","webpack:///./src/pages/team/index.js"],"names":["forwardRef","props","ref","_props$cellHeight","cellHeight","children","classes","className","_props$cols","cols","_props$component","component","Component","_props$spacing","spacing","style","other","createElement","root","margin","Children","map","child","isValidElement","childCols","childRows","rows","cloneElement","width","concat","height","padding","withStyles","display","flexWrap","overflowY","listStyle","WebkitOverflowScrolling","name","imgEl","_imgEl$classList","_imgEl$classList2","_imgEl$classList3","_imgEl$classList4","complete","parentElement","offsetWidth","offsetHeight","classList","remove","apply","imgFullWidth","split","add","imgFullHeight","imgRef","useRef","useEffect","addEventListener","ensureImageCover","current","handleResize","debounce","window","clear","removeEventListener","tile","type","isMuiElement","boxSizing","flexShrink","position","overflow","transform","left","top","actionIcon","_props$actionPosition","actionPosition","subtitle","title","_props$titlePosition","titlePosition","actionPos","titlePositionTop","titlePositionBottom","rootSubtitle","titleWrap","titleWrapActionPosLeft","right","titleWrapActionPosRight","actionIconActionPosLeft","theme","background","alignItems","fontFamily","typography","bottom","flexGrow","marginLeft","marginRight","color","palette","common","white","fontSize","pxToRem","lineHeight","textOverflow","whiteSpace","order","query","withRoot","teams","data","allMarkdownRemark","edges","Page","SEO","Typography","paragraph","edge","node","frontmatter","path","publicURL","image","jobtitle","key","to","src","withPrefix","alt","IconButton"],"mappings":"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","file":"component---src-pages-team-index-js-0f66dfd483a32669941c.js","sourcesContent":["import \"core-js/modules/es6.array.map\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n  }\n};\nvar GridList = React.forwardRef(function GridList(props, ref) {\n  var _props$cellHeight = props.cellHeight,\n      cellHeight = _props$cellHeight === void 0 ? 180 : _props$cellHeight,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 2 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 4 : _props$spacing,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"cellHeight\", \"children\", \"classes\", \"className\", \"cols\", \"component\", \"spacing\", \"style\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    style: _extends({\n      margin: -spacing / 2\n    }, style)\n  }, other), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the GridList component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childCols = child.props.cols || 1;\n    var childRows = child.props.rows || 1;\n    return React.cloneElement(child, {\n      style: _extends({\n        width: \"\".concat(100 / cols * childCols, \"%\"),\n        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,\n        padding: spacing / 2\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridList.propTypes = {\n  /**\n   * Number of px for one cell height.\n   * You can set `'auto'` if you want to let the children determine the height.\n   */\n  cellHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n\n  /**\n   * Grid Tiles that will be in Grid List.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Number of px for the spacing between tiles.\n   */\n  spacing: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridList'\n})(GridList);","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport withStyles from '../styles/withStyles';\nimport isMuiElement from '../utils/isMuiElement';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the `div` element that wraps the children. */\n  tile: {\n    position: 'relative',\n    display: 'block',\n    // In case it's not rendered with a div.\n    height: '100%',\n    overflow: 'hidden'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullHeight: {\n    height: '100%',\n    transform: 'translateX(-50%)',\n    position: 'relative',\n    left: '50%'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullWidth: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateY(-50%)',\n    top: '50%'\n  }\n};\n\nvar fit = function fit(imgEl, classes) {\n  if (!imgEl || !imgEl.complete) {\n    return;\n  }\n\n  if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {\n    var _imgEl$classList, _imgEl$classList2;\n\n    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArray(classes.imgFullWidth.split(' ')));\n\n    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArray(classes.imgFullHeight.split(' ')));\n  } else {\n    var _imgEl$classList3, _imgEl$classList4;\n\n    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArray(classes.imgFullHeight.split(' ')));\n\n    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArray(classes.imgFullWidth.split(' ')));\n  }\n};\n\nfunction ensureImageCover(imgEl, classes) {\n  if (!imgEl) {\n    return;\n  }\n\n  if (imgEl.complete) {\n    fit(imgEl, classes);\n  } else {\n    imgEl.addEventListener('load', function () {\n      fit(imgEl, classes);\n    });\n  }\n}\n\nvar GridListTile = React.forwardRef(function GridListTile(props, ref) {\n  // cols rows default values are for docs only\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 1 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 1 : _props$rows,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\n\n  var imgRef = React.useRef(null);\n  React.useEffect(function () {\n    ensureImageCover(imgRef.current, classes);\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      fit(imgRef.current, classes);\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [classes]);\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: classes.tile\n  }, React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (child.type === 'img' || isMuiElement(child, ['Image'])) {\n      return React.cloneElement(child, {\n        ref: imgRef\n      });\n    }\n\n    return child;\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\n  /**\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\n   * in which case GridListTile takes care of making the image \"cover\" available space\n   * (similar to `background-size: cover` or to `object-fit: cover`).\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Width of the tile in number of grid cells.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the tile in number of grid cells.\n   */\n  rows: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTile'\n})(GridListTile);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      height: 48,\n      background: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Styles applied to the root element if `titlePosition=\"bottom\"`. */\n    titlePositionBottom: {\n      bottom: 0\n    },\n\n    /* Styles applied to the root element if `titlePosition=\"top\"`. */\n    titlePositionTop: {\n      top: 0\n    },\n\n    /* Styles applied to the root element if a `subtitle` is provided. */\n    rootSubtitle: {\n      height: 68\n    },\n\n    /* Styles applied to the title and subtitle container element. */\n    titleWrap: {\n      flexGrow: 1,\n      marginLeft: 16,\n      marginRight: 16,\n      color: theme.palette.common.white,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the container element if `actionPosition=\"left\"`. */\n    titleWrapActionPosLeft: {\n      marginLeft: 0\n    },\n\n    /* Styles applied to the container element if `actionPosition=\"right\"`. */\n    titleWrapActionPosRight: {\n      marginRight: 0\n    },\n\n    /* Styles applied to the title container element. */\n    title: {\n      fontSize: theme.typography.pxToRem(16),\n      lineHeight: '24px',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the subtitle container element. */\n    subtitle: {\n      fontSize: theme.typography.pxToRem(12),\n      lineHeight: 1,\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the actionIcon if supplied. */\n    actionIcon: {},\n\n    /* Styles applied to the actionIcon if `actionPosition=\"left\"`. */\n    actionIconActionPosLeft: {\n      order: -1\n    }\n  };\n};\nvar GridListTileBar = React.forwardRef(function GridListTileBar(props, ref) {\n  var actionIcon = props.actionIcon,\n      _props$actionPosition = props.actionPosition,\n      actionPosition = _props$actionPosition === void 0 ? 'right' : _props$actionPosition,\n      classes = props.classes,\n      className = props.className,\n      subtitle = props.subtitle,\n      title = props.title,\n      _props$titlePosition = props.titlePosition,\n      titlePosition = _props$titlePosition === void 0 ? 'bottom' : _props$titlePosition,\n      other = _objectWithoutProperties(props, [\"actionIcon\", \"actionPosition\", \"classes\", \"className\", \"subtitle\", \"title\", \"titlePosition\"]);\n\n  var actionPos = actionIcon && actionPosition;\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, titlePosition === 'top' ? classes.titlePositionTop : classes.titlePositionBottom, subtitle && classes.rootSubtitle),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: clsx(classes.titleWrap, {\n      left: classes.titleWrapActionPosLeft,\n      right: classes.titleWrapActionPosRight\n    }[actionPos])\n  }, React.createElement(\"div\", {\n    className: classes.title\n  }, title), subtitle ? React.createElement(\"div\", {\n    className: classes.subtitle\n  }, subtitle) : null), actionIcon ? React.createElement(\"div\", {\n    className: clsx(classes.actionIcon, {\n      left: classes.actionIconActionPosLeft\n    }[actionPos])\n  }, actionIcon) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTileBar.propTypes = {\n  /**\n   * An IconButton element to be used as secondary action target\n   * (primary action target is the tile itself).\n   */\n  actionIcon: PropTypes.node,\n\n  /**\n   * Position of secondary action IconButton.\n   */\n  actionPosition: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * String or element serving as subtitle (support text).\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Title to be displayed on tile.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Position of the title bar.\n   */\n  titlePosition: PropTypes.oneOf(['top', 'bottom'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTileBar'\n})(GridListTileBar);","import withRoot from \"../../utils/withRoot\";\r\nimport React from \"react\";\r\nimport { Link, graphql, withPrefix } from \"gatsby\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SEO from \"../../components/SEO\";\r\nimport Page from \"../../components/Page\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Rocket } from \"mdi-material-ui\";\r\n\r\nconst Team = props => {\r\n  const teams = props.data.allMarkdownRemark.edges;\r\n  return (\r\n    <Page title=\"Meet the Team\">\r\n      <SEO title=\"Meet the Team\" />\r\n      <Typography paragraph>\r\n        We are here to help! Let us know what we can do. And we're of course\r\n        always interested to find new recruits to join our amazing team. We are\r\n        here to help! Let us know what we can do. And we're of course always\r\n        interested to find new recruits to join our amazing team. We are here to\r\n        help! Let us know what we can do. And we're of course always interested\r\n        to find new recruits to join our amazing team.\r\n      </Typography>\r\n\r\n      <GridList cellHeight={500} cols={3}>\r\n        {teams.map(edge => {\r\n          const {\r\n            node: {\r\n              frontmatter: {\r\n                path,\r\n                title,\r\n                image: { publicURL },\r\n                jobtitle,\r\n              },\r\n            },\r\n          } = edge;\r\n          return (\r\n            <Link key={path} to={path}>\r\n              <GridListTile cols={1}>\r\n                <img src={withPrefix(publicURL)} alt={title} />\r\n                <GridListTileBar\r\n                  title={title}\r\n                  subtitle={jobtitle}\r\n                  actionIcon={\r\n                    <IconButton\r\n                      className=\"teamIcon\"\r\n                      style={{ color: \"rgba(255, 255, 255, 0.54)\" }}\r\n                    >\r\n                      <Rocket />\r\n                    </IconButton>\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            </Link>\r\n          );\r\n        })}\r\n      </GridList>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query TeamQuery {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/team/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            image {\r\n              publicURL\r\n            }\r\n            title\r\n            path\r\n            jobtitle\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default withRoot(Team);\r\n"],"sourceRoot":""}