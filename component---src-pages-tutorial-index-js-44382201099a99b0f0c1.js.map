{"version":3,"sources":["webpack:///./src/components/TutList.js","webpack:///./src/pages/tutorial/index.js"],"names":["withStyles","cardMedia","height","props","classes","Grid","spacing","container","direction","alignItems","justify","items","map","edge","node","excerpt","frontmatter","path","title","item","xs","key","Card","CardContent","Typography","gutterBottom","variant","component","to","query","withRoot","tutorial","data","allMarkdownRemark","edges","Page","SEO"],"mappings":"gOA0DeA,cAhDA,CACXC,UAAW,CACPC,OAAQ,UA8CDF,EA1CC,SAAAG,GACQA,EAAZC,QACR,OACI,wBAACC,EAAA,EAAD,CACIC,QAAS,EACTC,WAAS,EACTC,UAAU,MACVC,WAAW,aACXC,QAAQ,UAEPP,EAAMQ,MAAMC,KAAI,SAAAC,GAAS,IAAD,EAUjBA,EARAC,KACIC,EAHa,EAGbA,QAHa,IAIbC,YACIC,EALS,EAKTA,KACAC,EANS,EAMTA,MAKZ,OACI,wBAACb,EAAA,EAAD,CAAMc,MAAI,EAACC,GAAI,GAAIC,IAAKJ,EAAMX,QAAS,GACnC,wBAACgB,EAAA,EAAD,KAKI,wBAACC,EAAA,EAAD,KACI,wBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC5C,wBAAC,OAAD,CAAMC,GAAIX,GAAOC,IAErB,wBAACM,EAAA,EAAD,CAAYG,UAAU,KAAKZ,aChD3D,sCAOA,IAUac,EAAK,aAsBHC,uBAhCE,SAAA3B,GACb,IAAM4B,EAAW5B,EAAM6B,KAAKC,kBAAkBC,MAC9C,OACI,wBAACC,EAAA,EAAD,CAAMjB,MAAM,YACR,wBAACkB,EAAA,EAAD,CAAKlB,MAAM,aACX,wBAAC,EAAD,CAAMP,MAAOoB","file":"component---src-pages-tutorial-index-js-44382201099a99b0f0c1.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withPrefix } from \"gatsby\";\r\nimport withStyles from \"@material-ui/styles/withStyles\";\r\n\r\nconst styles = {\r\n    cardMedia: {\r\n        height: \"200px\"\r\n    }\r\n};\r\n\r\nconst TutList = props => {\r\n    const { classes } = props;\r\n    return (\r\n        <Grid\r\n            spacing={2}\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"flex-start\"\r\n            justify=\"center\"\r\n        >\r\n            {props.items.map(edge => {\r\n                const {\r\n                    node: {\r\n                        excerpt,\r\n                        frontmatter: {\r\n                            path,\r\n                            title,\r\n                            // image: { publicURL },\r\n                        },\r\n                    },\r\n                } = edge;\r\n                return (\r\n                    <Grid item xs={12} key={path} spacing={2}>\r\n                        <Card>\r\n                            {/*<CardMedia*/}\r\n                            {/*    className={classes.cardMedia}*/}\r\n                            {/*    // image={withPrefix(publicURL)}*/}\r\n                            {/*/>*/}\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    <Link to={path}>{title}</Link>\r\n                                </Typography>\r\n                                <Typography component=\"p\">{excerpt}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(TutList);\r\n","import withRoot from \"../../utils/withRoot\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport SEO from \"../../components/SEO\";\r\nimport Page from \"../../components/Page\";\r\nimport List from \"../../components/TutList\";\r\n\r\nconst Tutorial = props => {\r\n    const tutorial = props.data.allMarkdownRemark.edges;\r\n    return (\r\n        <Page title=\"Tutorial\">\r\n            <SEO title=\"Tutorial\" />\r\n            <List items={tutorial} />\r\n        </Page>\r\n    );\r\n};\r\n//TODO:: tutaj jest style odwolywania sie do pod katalogow\r\nexport const query = graphql`\r\n  query TutorialsQuery {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/tutorial/content/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n//taken from frontmatter part\r\n// image {\r\n//     publicURL\r\n// }\r\nexport default withRoot(Tutorial);\r\n"],"sourceRoot":""}