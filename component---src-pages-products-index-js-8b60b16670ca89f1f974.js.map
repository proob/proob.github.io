{"version":3,"sources":["webpack:///./src/components/List.js","webpack:///./src/pages/products/index.js","webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js"],"names":["withStyles","cardMedia","height","props","classes","Grid","spacing","container","direction","alignItems","justify","items","map","edge","node","excerpt","frontmatter","path","title","publicURL","image","item","xs","md","key","Card","CardMedia","className","withPrefix","CardContent","Typography","gutterBottom","variant","component","to","query","withRoot","products","data","allMarkdownRemark","edges","Page","SEO","MEDIA_COMPONENTS","forwardRef","ref","children","_props$component","Component","src","style","other","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","createElement","root","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","name"],"mappings":"qPA0DeA,cAhDA,CACbC,UAAW,CACTC,OAAQ,UA8CGF,EA1CF,SAAAG,GAAU,IACbC,EAAYD,EAAZC,QACR,OACE,kBAACC,EAAA,EAAD,CACEC,QAAS,GACTC,WAAS,EACTC,UAAU,MACVC,WAAW,aACXC,QAAQ,UAEPP,EAAMQ,MAAMC,KAAI,SAAAC,GAAS,IAAD,EAUnBA,EARFC,KACEC,EAHmB,EAGnBA,QAHmB,IAInBC,YACEC,EALiB,EAKjBA,KACAC,EANiB,EAMjBA,MACSC,EAPQ,EAOjBC,MAASD,UAIf,OACE,kBAACd,EAAA,EAAD,CAAMgB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKP,GAC7B,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAWvB,EAAQH,UACnBmB,MAAOQ,YAAWT,KAEpB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC9C,kBAAC,IAAD,CAAMC,GAAIjB,GAAOC,IAEnB,kBAACY,EAAA,EAAD,CAAYG,UAAU,KAAKlB,aChD3C,sCAOA,IAUaoB,EAAK,YAsBHC,uBAhCE,SAAAjC,GACf,IAAMkC,EAAWlC,EAAMmC,KAAKC,kBAAkBC,MAC9C,OACE,kBAACC,EAAA,EAAD,CAAMvB,MAAM,YACV,kBAACwB,EAAA,EAAD,CAAKxB,MAAM,aACX,kBAAC,EAAD,CAAMP,MAAO0B,S,kCCZnB,+FA4BIM,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DjB,EAAY,IAAMkB,YAAW,SAAmBzC,EAAO0C,GACzD,IAAIC,EAAW3C,EAAM2C,SACjB1C,EAAUD,EAAMC,QAChBuB,EAAYxB,EAAMwB,UAClBoB,EAAmB5C,EAAM8B,UACzBe,OAAiC,IAArBD,EAA8B,MAAQA,EAClD3B,EAAQjB,EAAMiB,MACd6B,EAAM9C,EAAM8C,IACZC,EAAQ/C,EAAM+C,MACdC,EAAQ,YAAyBhD,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,MAAO,UAE1GiD,GAA4D,IAAzCT,EAAiBU,QAAQL,GAC5CM,GAAiBF,GAAoBhC,EAAQ,YAAS,CACxDmC,gBAAiB,QAASC,OAAOpC,EAAO,OACvC8B,GAASA,EACZ,OAAO,IAAMO,cAAcT,EAAW,YAAS,CAC7CrB,UAAW,YAAKvB,EAAQsD,KAAM/B,EAAWyB,GAAoBhD,EAAQuD,OAA6C,IAAtC,cAAcN,QAAQL,IAAqB5C,EAAQwD,KAC/Hf,IAAKA,EACLK,MAAOI,EACPL,IAAKG,EAAmBhC,GAAS6B,OAAMY,GACtCV,GAAQL,MAkDE,gBA3FK,CAElBY,KAAM,CACJI,QAAS,QACTC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAItBN,MAAO,CACLO,MAAO,QAITN,IAAK,CAEHO,UAAW,UA0EmB,CAChCC,KAAM,gBADO,CAEZ1C","file":"component---src-pages-products-index-js-8b60b16670ca89f1f974.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withPrefix } from \"gatsby\";\r\nimport withStyles from \"@material-ui/styles/withStyles\";\r\n\r\nconst styles = {\r\n  cardMedia: {\r\n    height: \"200px\"\r\n  }\r\n};\r\n\r\nconst List = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid\r\n      spacing={24}\r\n      container\r\n      direction=\"row\"\r\n      alignItems=\"flex-start\"\r\n      justify=\"center\"\r\n    >\r\n      {props.items.map(edge => {\r\n        const {\r\n          node: {\r\n            excerpt,\r\n            frontmatter: {\r\n              path,\r\n              title,\r\n              image: { publicURL },\r\n            },\r\n          },\r\n        } = edge;\r\n        return (\r\n          <Grid item xs={12} md={6} key={path}>\r\n            <Card>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image={withPrefix(publicURL)}\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  <Link to={path}>{title}</Link>\r\n                </Typography>\r\n                <Typography component=\"p\">{excerpt}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(List);\r\n","import withRoot from \"../../utils/withRoot\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport SEO from \"../../components/SEO\";\r\nimport Page from \"../../components/Page\";\r\nimport List from \"../../components/List\";\r\n\r\nconst Products = props => {\r\n  const products = props.data.allMarkdownRemark.edges;\r\n  return (\r\n    <Page title=\"Products\">\r\n      <SEO title=\"Products\" />\r\n      <List items={products} />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ProductsQuery {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/products/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          frontmatter {\r\n            image {\r\n              publicURL\r\n            }\r\n            title\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default withRoot(Products);\r\n","import \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src) {\n      return new Error('Material-UI: either `children`, `image` or `src` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);"],"sourceRoot":""}