{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./src/templates/general.js"],"names":["MEDIA_COMPONENTS","CardMedia","forwardRef","props","ref","children","classes","className","_props$component","component","Component","image","src","style","other","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","createElement","root","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","name","query","withRoot","withStyles","cardMedia","height","data","title","publicURL","html","withPrefix","gutterBottom","variant","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,sFA4BIA,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAY,UAAMC,YAAW,SAAmBC,EAAOC,GACzD,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAmBL,EAAMM,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQR,EAAMQ,MACdC,EAAMT,EAAMS,IACZC,EAAQV,EAAMU,MACdC,EAAQ,YAAyBX,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,MAAO,UAE1GY,GAA4D,IAAzCf,EAAiBgB,QAAQN,GAC5CO,GAAiBF,GAAoBJ,EAAQ,YAAS,CACxDO,gBAAiB,QAASC,OAAOR,EAAO,OACvCE,GAASA,EACZ,OAAO,UAAMO,cAAcV,EAAW,YAAS,CAC7CH,UAAW,YAAKD,EAAQe,KAAMd,EAAWQ,GAAoBT,EAAQgB,OAA6C,IAAtC,cAAcN,QAAQN,IAAqBJ,EAAQiB,KAC/HnB,IAAKA,EACLS,MAAOI,EACPL,IAAKG,EAAmBJ,GAASC,OAAMY,GACtCV,GAAQT,MAkDE,gBA3FK,CAElBgB,KAAM,CACJI,QAAS,QACTC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAItBN,MAAO,CACLO,MAAO,QAITN,IAAK,CAEHO,UAAW,UA0EmB,CAChCC,KAAM,gBADO,CAEZ9B,I,oCCrGH,qLAwCa+B,EAAN,aAeQC,sBAASC,YA3CT,CACbC,UAAW,CACTC,OAAQ,UAyCYF,EArCT,SAAC,GAAuB,IAArB5B,EAAoB,EAApBA,QAAS+B,EAAW,EAAXA,KAAW,EAI9BA,iBAJ8B,YAEhCC,EAFgC,QAGvBC,EAHuB,kBAKhCC,EAASH,EALuB,oBAMpC,OACE,qBACE,iBAAKC,MAAOA,IACZ,qBACE,iBAAW/B,UAAWD,EAAtB,UAAyCK,MAAO8B,qBAAWF,KAC3D,qBACE,iBAAYG,cAAZ,EAAyBC,QAAzB,KAAsClC,UAAU,MADlD,GAIE,iBAAYmC,wBAAyB,CAAEC,OAAQL","file":"component---src-templates-general-js-1b04a45492c7dbf7c3ba.js","sourcesContent":["import \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src) {\n      return new Error('Material-UI: either `children`, `image` or `src` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import withRoot from \"../utils/withRoot\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport SEO from \"../components/SEO\";\r\nimport Page from \"../components/Page\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withPrefix } from \"gatsby\";\r\nimport withStyles from \"@material-ui/styles/withStyles\";\r\n\r\nconst styles = {\r\n  cardMedia: {\r\n    height: \"200px\"\r\n  }\r\n};\r\n\r\nconst Detail = ({ classes, data }) => {\r\n  const {\r\n      title,\r\n      image: { publicURL },\r\n    } = data.markdownRemark.frontmatter,\r\n    { html } = data.markdownRemark;\r\n  return (\r\n    <Page>\r\n      <SEO title={title} />\r\n      <Card>\r\n        <CardMedia className={classes.cardMedia} image={withPrefix(publicURL)} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h2\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography dangerouslySetInnerHTML={{ __html: html }} />\r\n        </CardContent>\r\n      </Card>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      frontmatter {\r\n        image {\r\n          publicURL\r\n        }\r\n        title\r\n        path\r\n      }\r\n      html\r\n    }\r\n  }\r\n`;\r\n\r\nexport default withRoot(withStyles(styles)(Detail));\r\n"],"sourceRoot":""}